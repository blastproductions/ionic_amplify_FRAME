{"version":3,"sources":["./src/app/home/home-routing.module.ts","./src/app/home/home.page.html","./src/app/home/home.module.ts","./src/app/home/home.page.scss","./src/app/API.service.ts","./src/app/home/home.page.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n","export default \"\\n<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Blank\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Blank</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <!--\\n  <div id=\\\"container\\\">\\n    <strong>Ready to create an app?</strong>\\n    <p>Start with Ionic <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://ionicframework.com/docs/components\\\">UI Components</a></p>\\n  </div>\\n  -->\\n\\n\\n      <ion-button (click)=\\\"createTodo()\\\">Add Data</ion-button>\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let item of todos\\\">\\n          <p>{{item.name}} - {{item.description}}</p>\\n        </ion-item>\\n      </ion-list>\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","export default \"#container {\\n  /*\\n    text-align: center;\\n\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\n    top: 50%;\\n    transform: translateY(-50%);\\n  */\\n}\\n\\n#container strong {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container a {\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2hvbWUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0E7Ozs7Ozs7O0dBQUE7QUFTQTs7QUFFQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBRUEsY0FBQTtFQUVBLFNBQUE7QUFERjs7QUFJQTtFQUNFLHFCQUFBO0FBREYiLCJmaWxlIjoiaG9tZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY29udGFpbmVyIHtcbi8qXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuKi9cbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG4jY29udGFpbmVyIHAge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuXG4gIGNvbG9yOiAjOGM4YzhjO1xuXG4gIG1hcmdpbjogMDtcbn1cblxuI2NvbnRhaW5lciBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufSJdfQ== */\";","/* tslint:disable */\n/* eslint-disable */\n//  This file was automatically generated and should not be edited.\nimport { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api-graphql\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse<T> {\n  value: GraphQLResult<T>;\n}\n\nexport type CreateTodoInput = {\n  id?: string | null;\n  name: string;\n  description?: string | null;\n};\n\nexport type ModelTodoConditionInput = {\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  and?: Array<ModelTodoConditionInput | null> | null;\n  or?: Array<ModelTodoConditionInput | null> | null;\n  not?: ModelTodoConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type UpdateTodoInput = {\n  id: string;\n  name?: string | null;\n  description?: string | null;\n};\n\nexport type DeleteTodoInput = {\n  id?: string | null;\n};\n\nexport type ModelTodoFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  and?: Array<ModelTodoFilterInput | null> | null;\n  or?: Array<ModelTodoFilterInput | null> | null;\n  not?: ModelTodoFilterInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type CreateTodoMutation = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateTodoMutation = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteTodoMutation = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type GetTodoQuery = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListTodosQuery = {\n  __typename: \"ModelTodoConnection\";\n  items: Array<{\n    __typename: \"Todo\";\n    id: string;\n    name: string;\n    description: string | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type OnCreateTodoSubscription = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateTodoSubscription = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteTodoSubscription = {\n  __typename: \"Todo\";\n  id: string;\n  name: string;\n  description: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateTodo(\n    input: CreateTodoInput,\n    condition?: ModelTodoConditionInput\n  ): Promise<CreateTodoMutation> {\n    const statement = `mutation CreateTodo($input: CreateTodoInput!, $condition: ModelTodoConditionInput) {\n        createTodo(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateTodoMutation>response.data.createTodo;\n  }\n  async UpdateTodo(\n    input: UpdateTodoInput,\n    condition?: ModelTodoConditionInput\n  ): Promise<UpdateTodoMutation> {\n    const statement = `mutation UpdateTodo($input: UpdateTodoInput!, $condition: ModelTodoConditionInput) {\n        updateTodo(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateTodoMutation>response.data.updateTodo;\n  }\n  async DeleteTodo(\n    input: DeleteTodoInput,\n    condition?: ModelTodoConditionInput\n  ): Promise<DeleteTodoMutation> {\n    const statement = `mutation DeleteTodo($input: DeleteTodoInput!, $condition: ModelTodoConditionInput) {\n        deleteTodo(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteTodoMutation>response.data.deleteTodo;\n  }\n  async GetTodo(id: string): Promise<GetTodoQuery> {\n    const statement = `query GetTodo($id: ID!) {\n        getTodo(id: $id) {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetTodoQuery>response.data.getTodo;\n  }\n  async ListTodos(\n    filter?: ModelTodoFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListTodosQuery> {\n    const statement = `query ListTodos($filter: ModelTodoFilterInput, $limit: Int, $nextToken: String) {\n        listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            description\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListTodosQuery>response.data.listTodos;\n  }\n  OnCreateTodoListener: Observable<\n    SubscriptionResponse<OnCreateTodoSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateTodo {\n        onCreateTodo {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnCreateTodoSubscription>>;\n\n  OnUpdateTodoListener: Observable<\n    SubscriptionResponse<OnUpdateTodoSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateTodo {\n        onUpdateTodo {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnUpdateTodoSubscription>>;\n\n  OnDeleteTodoListener: Observable<\n    SubscriptionResponse<OnDeleteTodoSubscription>\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteTodo {\n        onDeleteTodo {\n          __typename\n          id\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<SubscriptionResponse<OnDeleteTodoSubscription>>;\n}\n","import { Component } from '@angular/core';\nimport { APIService } from '../API.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  todos: Array<any>;\n\n  constructor(\n    private apiService: APIService\n  \t) {\n     this.initializeApp(); \t\n  \t}\n\n  createTodo() {\n    this.apiService.CreateTodo({\n        name: 'Jo',\n        description: 'New Data'\n    });\n  }\n\n  initializeApp() {\n\n      this.apiService.ListTodos().then((evt) => {\n        this.todos = evt.items;\n      });\n\n      this.apiService.OnCreateTodoListener.subscribe((evt) => {\n        const data = (evt as any).value.data.onCreateTodo;\n        this.todos = [...this.todos, data];\n      });\n      \n  }\n}\n"],"sourceRoot":"webpack:///"}